{
  "service": {
    "service": "letspoll",
    "serviceObject": {
      "name": "letspoll"
    },
    "provider": {
      "stage": "beta",
      "region": "ap-south-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "java8",
      "profile": "lets-poll-default",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "letsPollVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": "172.31.0.0/16",
              "EnableDnsSupport": true,
              "EnableDnsHostnames": true,
              "InstanceTenancy": "default",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Lets Poll VPC"
                }
              ]
            }
          },
          "letsPollIGW": {
            "Type": "AWS::EC2::InternetGateway"
          },
          "letsPollVPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
              "VpcId": {
                "Ref": "letsPollVPC"
              },
              "InternetGatewayId": {
                "Ref": "letsPollIGW"
              }
            }
          },
          "letsPollPublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "VpcId": {
                "Ref": "letsPollVPC"
              },
              "AvailabilityZone": "ap-south-1a",
              "CidrBlock": "172.31.0.0/20",
              "MapPublicIpOnLaunch": true,
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Lets Poll VPC Public Subnet 1"
                }
              ]
            }
          },
          "letsPollPrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "VpcId": {
                "Ref": "letsPollVPC"
              },
              "CidrBlock": "172.31.16.0/20",
              "AvailabilityZone": "ap-south-1a",
              "MapPublicIpOnLaunch": false,
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Lets Poll VPC Private Subnet 1"
                }
              ]
            }
          },
          "letsPollPrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "VpcId": {
                "Ref": "letsPollVPC"
              },
              "CidrBlock": "172.31.32.0/20",
              "AvailabilityZone": "ap-south-1b",
              "MapPublicIpOnLaunch": false,
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Lets Poll VPC Private Subnet 2"
                }
              ]
            }
          },
          "letsPollVPCNatGateway1EIP": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": "letsPollVPCGatewayAttachment",
            "Properties": {
              "Domain": "vpc"
            }
          },
          "letsPollVPCNatGateway1": {
            "Type": "AWS::EC2::NatGateway",
            "DependsOn": "letsPollVPCNatGateway1EIP",
            "Properties": {
              "AllocationId": {
                "Fn::GetAtt": [
                  "letsPollVPCNatGateway1EIP",
                  "AllocationId"
                ]
              },
              "SubnetId": {
                "Ref": "letsPollPublicSubnet"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Lets Poll VPC NAT Gateway 1"
                }
              ]
            }
          },
          "letsPollVPCPublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": {
                "Ref": "letsPollVPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Lets Poll Public Subnet Route Table"
                }
              ]
            }
          },
          "letsPollVPCDefaultPublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "letsPollVPCGatewayAttachment",
            "Properties": {
              "RouteTableId": {
                "Ref": "letsPollVPCPublicRouteTable"
              },
              "DestinationCidrBlock": "0.0.0.0/0",
              "NatGatewayId": {
                "Ref": "letsPollVPCNatGateway1"
              }
            }
          },
          "letsPollPublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "letsPollVPCPublicRouteTable"
              },
              "SubnetId": {
                "Ref": "letsPollPublicSubnet"
              }
            }
          },
          "letsPollPrivateRouteTable1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": {
                "Ref": "letsPollVPC"
              }
            }
          },
          "letsPollPrivateRouteTable2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": {
                "Ref": "letsPollVPC"
              }
            }
          },
          "letsPollDefaultPrivateRoute1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
              "RouteTableId": {
                "Ref": "letsPollPrivateRouteTable1"
              },
              "DestinationCidrBlock": "0.0.0.0/0",
              "NatGatewayId": {
                "Ref": "letsPollVPCNatGateway1"
              }
            }
          },
          "letsPollDefaultPrivateRoute2": {
            "Type": "AWS::EC2::Route",
            "Properties": {
              "RouteTableId": {
                "Ref": "letsPollPrivateRouteTable2"
              },
              "DestinationCidrBlock": "0.0.0.0/0",
              "NatGatewayId": {
                "Ref": "letsPollVPCNatGateway1"
              }
            }
          },
          "letsPollPrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "letsPollPrivateRouteTable1"
              },
              "SubnetId": {
                "Ref": "letsPollPrivateSubnet1"
              }
            }
          },
          "letsPollPrivateSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "letsPollPrivateRouteTable2"
              },
              "SubnetId": {
                "Ref": "letsPollPrivateSubnet2"
              }
            }
          },
          "lambdaSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupDescription": "Security Group for Lambda",
              "VpcId": {
                "Ref": "letsPollVPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Lambda Security group"
                }
              ]
            }
          },
          "databaseSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupDescription": "Security Group for database",
              "VpcId": {
                "Ref": "letsPollVPC"
              },
              "SecurityGroupIngress": [
                {
                  "IpProtocol": "tcp",
                  "FromPort": 5432,
                  "ToPort": 5432,
                  "SourceSecurityGroupId": {
                    "Ref": "lambdaSecurityGroup"
                  }
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Database Security group"
                }
              ]
            }
          },
          "CognitoUserPoolUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "letspoll-user-pool-beta-1",
              "AutoVerifiedAttributes": [
                "email"
              ],
              "MfaConfiguration": "OFF",
              "Schema": [
                {
                  "Name": "name",
                  "AttributeDataType": "String",
                  "Mutable": true,
                  "Required": true
                },
                {
                  "Name": "email",
                  "AttributeDataType": "String",
                  "Mutable": false,
                  "Required": true
                },
                {
                  "Name": "phone_number",
                  "AttributeDataType": "String",
                  "Mutable": false,
                  "Required": true
                },
                {
                  "Name": "slackId",
                  "AttributeDataType": "String",
                  "Mutable": true
                }
              ]
            }
          },
          "letsPollLambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              }
            }
          },
          "letsPollLambdaBasicExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyName": "LetsPollLambdaBasicExecutionPolicyRenamed",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": "logs:CreateLogGroup",
                    "Resource": {
                      "Fn::Sub": "arn:aws:logs:ap-south-1:${AWS::AccountId}::*"
                    }
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:CreateLogStream",
                      "logs:PutLogEvents"
                    ],
                    "Resource": [
                      {
                        "Fn::Sub": "arn:aws:logs:${AWS::AccountId}:log-group:/aws/lambda/letspoll-beta-logGroup:*"
                      }
                    ]
                  }
                ]
              },
              "Roles": [
                {
                  "Ref": "letsPollLambdaExecutionRole"
                }
              ]
            }
          },
          "LambdaInVPCExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyName": "LambdaInVPCExecutionPolicy",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "ec2:CreateNetworkInterface",
                      "ec2:DescribeNetworkInterfaces",
                      "ec2:DeleteNetworkInterface"
                    ],
                    "Resource": "*"
                  }
                ]
              },
              "Roles": [
                {
                  "Ref": "letsPollLambdaExecutionRole"
                }
              ]
            }
          },
          "PlayersAPI": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "Lets Poll API",
              "Description": "Lets Poll API",
              "Body": {
                "swagger": "2.0",
                "info": {
                  "version": "1.0.0",
                  "title": "Lets Poll"
                },
                "schemes": [
                  "https"
                ],
                "paths": {
                  "/polls": {
                    "get": {
                      "produces": [
                        "application/json"
                      ],
                      "responses": {
                        "200": {
                          "description": "200 response",
                          "schema": {
                            "$ref": "#/definitions/Polls"
                          }
                        }
                      }
                    },
                    "post": {
                      "consumes": [
                        "application/json"
                      ],
                      "produces": [
                        "application/json"
                      ],
                      "parameters": [
                        {
                          "in": "body",
                          "name": "PollCreationRequest",
                          "description": "body object",
                          "required": true,
                          "schema": {
                            "$ref": "#/definitions/PollCreationRequest"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "200 response",
                          "schema": {
                            "$ref": "#/definitions/PollCreationResponse"
                          }
                        }
                      }
                    }
                  },
                  "/polls/{pollId}": {
                    "get": {
                      "produces": [
                        "application/json"
                      ],
                      "parameters": [
                        {
                          "name": "pollId",
                          "in": "path",
                          "required": true,
                          "type": "string"
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "200 response",
                          "schema": {
                            "$ref": "#/definitions/Poll"
                          }
                        }
                      }
                    },
                    "post": {
                      "consumes": [
                        "application/json"
                      ],
                      "produces": [
                        "application/json"
                      ],
                      "parameters": [
                        {
                          "name": "pollId",
                          "in": "path",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "in": "body",
                          "name": "PollResponseReqiest",
                          "required": true,
                          "schema": {
                            "$ref": "#/definitions/PollResponseReqiest"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "200 response",
                          "schema": {
                            "$ref": "#/definitions/PollResponseResponse"
                          }
                        }
                      }
                    },
                    "delete": {
                      "produces": [
                        "application/json"
                      ],
                      "parameters": [
                        {
                          "name": "pollId",
                          "in": "path",
                          "required": true,
                          "type": "string"
                        }
                      ],
                      "responses": {}
                    }
                  },
                  "/polls/{pollId}/responses": {
                    "get": {
                      "produces": [
                        "application/json"
                      ],
                      "parameters": [
                        {
                          "name": "pollId",
                          "in": "path",
                          "required": true,
                          "type": "string"
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "200 response",
                          "schema": {
                            "$ref": "#/definitions/PollResponsesResultResponse"
                          }
                        }
                      }
                    }
                  },
                  "/respondent": {
                    "post": {
                      "consumes": [
                        "application/json"
                      ],
                      "produces": [
                        "application/json"
                      ],
                      "parameters": [
                        {
                          "in": "body",
                          "name": "RespondentRegisterationRequest",
                          "description": "body object",
                          "required": true,
                          "schema": {
                            "$ref": "#/definitions/RespondentRegisterationRequest"
                          }
                        }
                      ],
                      "responses": {
                        "201": {
                          "description": "Respondent created",
                          "headers": {
                            "Location": {
                              "type": "string",
                              "description": "links to the newly registered respondent"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "definitions": {
                  "PollResponseResponse": {
                    "type": "object",
                    "properties": {
                      "pollQuestion": {
                        "type": "string"
                      },
                      "respondentsReponse": {
                        "type": "string"
                      }
                    }
                  },
                  "PollCreationResponse": {
                    "type": "object",
                    "properties": {
                      "polls": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Poll"
                        }
                      }
                    }
                  },
                  "PollResponseReqiest": {
                    "type": "object",
                    "required": [
                      "polLResponse",
                      "pollId",
                      "respondentId"
                    ],
                    "properties": {
                      "pollId": {
                        "type": "string"
                      },
                      "polLResponse": {
                        "type": "string"
                      },
                      "respondentId": {
                        "type": "string"
                      }
                    }
                  },
                  "PollResponseStatistics": {
                    "type": "object",
                    "properties": {
                      "response": {
                        "type": "string"
                      },
                      "count": {
                        "type": "integer"
                      },
                      "percentage": {
                        "type": "number"
                      }
                    }
                  },
                  "Poll": {
                    "type": "object",
                    "required": [
                      "pollOptions",
                      "pollQuestion",
                      "pollTitle"
                    ],
                    "properties": {
                      "pollId": {
                        "type": "string"
                      },
                      "pollTitle": {
                        "type": "string"
                      },
                      "pollQuestion": {
                        "type": "string"
                      },
                      "pollOptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "PollCreationRequest": {
                    "type": "object",
                    "required": [
                      "pollOptions",
                      "pollQuestion",
                      "pollTitle"
                    ],
                    "properties": {
                      "pollTitle": {
                        "type": "string"
                      },
                      "pollQuestion": {
                        "type": "string"
                      },
                      "pollOptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "RespondentRegisterationRequest": {
                    "type": "object",
                    "properties": {
                      "congitoToken": {
                        "type": "string"
                      }
                    }
                  },
                  "PollResponsesResultResponse": {
                    "type": "object",
                    "properties": {
                      "pollId": {
                        "type": "string"
                      },
                      "pollTitle": {
                        "type": "string"
                      },
                      "pollQuestion": {
                        "type": "string"
                      },
                      "responses": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/PollResponseStatistics"
                        }
                      }
                    }
                  },
                  "Polls": {
                    "type": "object",
                    "properties": {
                      "polls": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Poll"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "custom": {
      "accountId": "AWS::AccountId"
    },
    "plugins": [
      "serverless-cf-vars"
    ],
    "pluginsData": {},
    "functions": {},
    "resources": {
      "Resources": {
        "letsPollVPC": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "CidrBlock": "172.31.0.0/16",
            "EnableDnsSupport": true,
            "EnableDnsHostnames": true,
            "InstanceTenancy": "default",
            "Tags": [
              {
                "Key": "Name",
                "Value": "Lets Poll VPC"
              }
            ]
          }
        },
        "letsPollIGW": {
          "Type": "AWS::EC2::InternetGateway"
        },
        "letsPollVPCGatewayAttachment": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
            "VpcId": {
              "Ref": "letsPollVPC"
            },
            "InternetGatewayId": {
              "Ref": "letsPollIGW"
            }
          }
        },
        "letsPollPublicSubnet": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
              "Ref": "letsPollVPC"
            },
            "AvailabilityZone": "ap-south-1a",
            "CidrBlock": "172.31.0.0/20",
            "MapPublicIpOnLaunch": true,
            "Tags": [
              {
                "Key": "Name",
                "Value": "Lets Poll VPC Public Subnet 1"
              }
            ]
          }
        },
        "letsPollPrivateSubnet1": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
              "Ref": "letsPollVPC"
            },
            "CidrBlock": "172.31.16.0/20",
            "AvailabilityZone": "ap-south-1a",
            "MapPublicIpOnLaunch": false,
            "Tags": [
              {
                "Key": "Name",
                "Value": "Lets Poll VPC Private Subnet 1"
              }
            ]
          }
        },
        "letsPollPrivateSubnet2": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
              "Ref": "letsPollVPC"
            },
            "CidrBlock": "172.31.32.0/20",
            "AvailabilityZone": "ap-south-1b",
            "MapPublicIpOnLaunch": false,
            "Tags": [
              {
                "Key": "Name",
                "Value": "Lets Poll VPC Private Subnet 2"
              }
            ]
          }
        },
        "letsPollVPCNatGateway1EIP": {
          "Type": "AWS::EC2::EIP",
          "DependsOn": "letsPollVPCGatewayAttachment",
          "Properties": {
            "Domain": "vpc"
          }
        },
        "letsPollVPCNatGateway1": {
          "Type": "AWS::EC2::NatGateway",
          "DependsOn": "letsPollVPCNatGateway1EIP",
          "Properties": {
            "AllocationId": {
              "Fn::GetAtt": [
                "letsPollVPCNatGateway1EIP",
                "AllocationId"
              ]
            },
            "SubnetId": {
              "Ref": "letsPollPublicSubnet"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "Lets Poll VPC NAT Gateway 1"
              }
            ]
          }
        },
        "letsPollVPCPublicRouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": {
              "Ref": "letsPollVPC"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "Lets Poll Public Subnet Route Table"
              }
            ]
          }
        },
        "letsPollVPCDefaultPublicRoute": {
          "Type": "AWS::EC2::Route",
          "DependsOn": "letsPollVPCGatewayAttachment",
          "Properties": {
            "RouteTableId": {
              "Ref": "letsPollVPCPublicRouteTable"
            },
            "DestinationCidrBlock": "0.0.0.0/0",
            "NatGatewayId": {
              "Ref": "letsPollVPCNatGateway1"
            }
          }
        },
        "letsPollPublicSubnet1RouteTableAssociation": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "letsPollVPCPublicRouteTable"
            },
            "SubnetId": {
              "Ref": "letsPollPublicSubnet"
            }
          }
        },
        "letsPollPrivateRouteTable1": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": {
              "Ref": "letsPollVPC"
            }
          }
        },
        "letsPollPrivateRouteTable2": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": {
              "Ref": "letsPollVPC"
            }
          }
        },
        "letsPollDefaultPrivateRoute1": {
          "Type": "AWS::EC2::Route",
          "Properties": {
            "RouteTableId": {
              "Ref": "letsPollPrivateRouteTable1"
            },
            "DestinationCidrBlock": "0.0.0.0/0",
            "NatGatewayId": {
              "Ref": "letsPollVPCNatGateway1"
            }
          }
        },
        "letsPollDefaultPrivateRoute2": {
          "Type": "AWS::EC2::Route",
          "Properties": {
            "RouteTableId": {
              "Ref": "letsPollPrivateRouteTable2"
            },
            "DestinationCidrBlock": "0.0.0.0/0",
            "NatGatewayId": {
              "Ref": "letsPollVPCNatGateway1"
            }
          }
        },
        "letsPollPrivateSubnet1RouteTableAssociation": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "letsPollPrivateRouteTable1"
            },
            "SubnetId": {
              "Ref": "letsPollPrivateSubnet1"
            }
          }
        },
        "letsPollPrivateSubnet2RouteTableAssociation": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "letsPollPrivateRouteTable2"
            },
            "SubnetId": {
              "Ref": "letsPollPrivateSubnet2"
            }
          }
        },
        "lambdaSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "Security Group for Lambda",
            "VpcId": {
              "Ref": "letsPollVPC"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "Lambda Security group"
              }
            ]
          }
        },
        "databaseSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "Security Group for database",
            "VpcId": {
              "Ref": "letsPollVPC"
            },
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "FromPort": 5432,
                "ToPort": 5432,
                "SourceSecurityGroupId": {
                  "Ref": "lambdaSecurityGroup"
                }
              }
            ],
            "Tags": [
              {
                "Key": "Name",
                "Value": "Database Security group"
              }
            ]
          }
        },
        "CognitoUserPoolUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "letspoll-user-pool-beta-1",
            "AutoVerifiedAttributes": [
              "email"
            ],
            "MfaConfiguration": "OFF",
            "Schema": [
              {
                "Name": "name",
                "AttributeDataType": "String",
                "Mutable": true,
                "Required": true
              },
              {
                "Name": "email",
                "AttributeDataType": "String",
                "Mutable": false,
                "Required": true
              },
              {
                "Name": "phone_number",
                "AttributeDataType": "String",
                "Mutable": false,
                "Required": true
              },
              {
                "Name": "slackId",
                "AttributeDataType": "String",
                "Mutable": true
              }
            ]
          }
        },
        "letsPollLambdaExecutionRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            }
          }
        },
        "letsPollLambdaBasicExecutionPolicy": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
            "PolicyName": "LetsPollLambdaBasicExecutionPolicyRenamed",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "logs:CreateLogGroup",
                  "Resource": "arn:aws:logs:ap-south-1:#{AWS::AccountId}::*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    "arn:aws:logs:#{AWS::AccountId}:log-group:/aws/lambda/letspoll-beta-logGroup:*"
                  ]
                }
              ]
            },
            "Roles": [
              {
                "Ref": "letsPollLambdaExecutionRole"
              }
            ]
          }
        },
        "LambdaInVPCExecutionPolicy": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
            "PolicyName": "LambdaInVPCExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "Roles": [
              {
                "Ref": "letsPollLambdaExecutionRole"
              }
            ]
          }
        },
        "PlayersAPI": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "Lets Poll API",
            "Description": "Lets Poll API",
            "Body": {
              "swagger": "2.0",
              "info": {
                "version": "1.0.0",
                "title": "Lets Poll"
              },
              "schemes": [
                "https"
              ],
              "paths": {
                "/polls": {
                  "get": {
                    "produces": [
                      "application/json"
                    ],
                    "responses": {
                      "200": {
                        "description": "200 response",
                        "schema": {
                          "$ref": "#/definitions/Polls"
                        }
                      }
                    }
                  },
                  "post": {
                    "consumes": [
                      "application/json"
                    ],
                    "produces": [
                      "application/json"
                    ],
                    "parameters": [
                      {
                        "in": "body",
                        "name": "PollCreationRequest",
                        "description": "body object",
                        "required": true,
                        "schema": {
                          "$ref": "#/definitions/PollCreationRequest"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "200 response",
                        "schema": {
                          "$ref": "#/definitions/PollCreationResponse"
                        }
                      }
                    }
                  }
                },
                "/polls/{pollId}": {
                  "get": {
                    "produces": [
                      "application/json"
                    ],
                    "parameters": [
                      {
                        "name": "pollId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "200 response",
                        "schema": {
                          "$ref": "#/definitions/Poll"
                        }
                      }
                    }
                  },
                  "post": {
                    "consumes": [
                      "application/json"
                    ],
                    "produces": [
                      "application/json"
                    ],
                    "parameters": [
                      {
                        "name": "pollId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                      },
                      {
                        "in": "body",
                        "name": "PollResponseReqiest",
                        "required": true,
                        "schema": {
                          "$ref": "#/definitions/PollResponseReqiest"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "200 response",
                        "schema": {
                          "$ref": "#/definitions/PollResponseResponse"
                        }
                      }
                    }
                  },
                  "delete": {
                    "produces": [
                      "application/json"
                    ],
                    "parameters": [
                      {
                        "name": "pollId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                      }
                    ],
                    "responses": {}
                  }
                },
                "/polls/{pollId}/responses": {
                  "get": {
                    "produces": [
                      "application/json"
                    ],
                    "parameters": [
                      {
                        "name": "pollId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "200 response",
                        "schema": {
                          "$ref": "#/definitions/PollResponsesResultResponse"
                        }
                      }
                    }
                  }
                },
                "/respondent": {
                  "post": {
                    "consumes": [
                      "application/json"
                    ],
                    "produces": [
                      "application/json"
                    ],
                    "parameters": [
                      {
                        "in": "body",
                        "name": "RespondentRegisterationRequest",
                        "description": "body object",
                        "required": true,
                        "schema": {
                          "$ref": "#/definitions/RespondentRegisterationRequest"
                        }
                      }
                    ],
                    "responses": {
                      "201": {
                        "description": "Respondent created",
                        "headers": {
                          "Location": {
                            "type": "string",
                            "description": "links to the newly registered respondent"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "definitions": {
                "PollResponseResponse": {
                  "type": "object",
                  "properties": {
                    "pollQuestion": {
                      "type": "string"
                    },
                    "respondentsReponse": {
                      "type": "string"
                    }
                  }
                },
                "PollCreationResponse": {
                  "type": "object",
                  "properties": {
                    "polls": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Poll"
                      }
                    }
                  }
                },
                "PollResponseReqiest": {
                  "type": "object",
                  "required": [
                    "polLResponse",
                    "pollId",
                    "respondentId"
                  ],
                  "properties": {
                    "pollId": {
                      "type": "string"
                    },
                    "polLResponse": {
                      "type": "string"
                    },
                    "respondentId": {
                      "type": "string"
                    }
                  }
                },
                "PollResponseStatistics": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    }
                  }
                },
                "Poll": {
                  "type": "object",
                  "required": [
                    "pollOptions",
                    "pollQuestion",
                    "pollTitle"
                  ],
                  "properties": {
                    "pollId": {
                      "type": "string"
                    },
                    "pollTitle": {
                      "type": "string"
                    },
                    "pollQuestion": {
                      "type": "string"
                    },
                    "pollOptions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "PollCreationRequest": {
                  "type": "object",
                  "required": [
                    "pollOptions",
                    "pollQuestion",
                    "pollTitle"
                  ],
                  "properties": {
                    "pollTitle": {
                      "type": "string"
                    },
                    "pollQuestion": {
                      "type": "string"
                    },
                    "pollOptions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "RespondentRegisterationRequest": {
                  "type": "object",
                  "properties": {
                    "congitoToken": {
                      "type": "string"
                    }
                  }
                },
                "PollResponsesResultResponse": {
                  "type": "object",
                  "properties": {
                    "pollId": {
                      "type": "string"
                    },
                    "pollTitle": {
                      "type": "string"
                    },
                    "pollQuestion": {
                      "type": "string"
                    },
                    "responses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/PollResponseStatistics"
                      }
                    }
                  }
                },
                "Polls": {
                  "type": "object",
                  "properties": {
                    "polls": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Poll"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Outputs": {}
    }
  },
  "package": {
    "artifactDirectoryName": "serverless/letspoll/beta/1536177943071-2018-09-05T20:05:43.071Z",
    "artifact": ""
  }
}